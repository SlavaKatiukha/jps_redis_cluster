_info : 'https://docs.cloudscripting.com/6.1.2/'
version: 6.1.2
type: install
name: 'Redis Cluster'
id: 'Redis_cluster'
homepage: https://github.com/layershift/jps_redis_cluster
baseUrl: https://raw.githubusercontent.com/layershift/jps_redis_cluster/main
logo: /images/Redis_cluster.png?_r=${fn.random}
categories:
 - apps/others

description:
  short: Easy way to deploy Redis Cluster configuration
  
settings:
  fields:
    - type: radiolist
      caption: Installation Mode
      name: mode
      default: newEnv
      columns: 2
      values:
        - caption: New Environment
          value: newEnv

        - caption: Existing Environment
          value: existingEnv
      showIf:
      #Settings for creating a new Environment
        newEnv:
          - caption: Environment
            type: envname
            name: envName
            dependsOn: region
          - caption: Region
            type: regionlist
            name: region
            disableInactive: true
            selectFirstAvailable: true
      #Settings for selecting current Environment
        existingEnv:
          - caption: Environment
            type: envlist
            name: envName
            valueField: shortdomain
    - caption: Number of nodes
      type: spinner
      name: redis_nodes
      increment: 0
      default: 6
      min: 6
      hidden: false
    - caption: Cloudlets
      type: spinner
      name: cldts
      increment: 2
      default: 10
      min: 4
    - caption: Public IP
      type: checkbox
      name: public_ip
      default: false
      hidden : true

onInstall:
  # Create appropriate environment with settings selected in previous screen
  - if (settings.mode == 'newEnv'):
      install:
        envName: ${settings.envName}
        region: ${settings.region}
        jps:
         type: install
         name: Redis Cluster
         nodes:
            - nodeType: redis
              displayName: Redis Nodes
              flexibleCloudlets: ${settings.cldts}
              count: ${settings.redis_nodes}
              nodeGroup: redis_nodes
              if ( ${settings.public_ip} == true ):
                extip: true
              skipNodeEmails: true
              env:
                ADMINPANEL_ENABLED: false
  #Add nodes to the Environment previously selected
  - if (settings.mode == 'existingEnv'): 
      install:
        envName: ${settings.envName}
        jps:
          type: update
          name: add nodes
          onInstall:
            node:
              nodeType: redis
              fixedCloudlets: 1
              flexibleCloudlets: ${settings.cldts}
              nodeGroup: redis_nodes
              options:
                skipNodeEmails: true
              skipNodeEmails: true
              metadata:
                dockerEnvVars:
                  ADMINPANEL_ENABLED: false
            script: |               
              return { result: 0, onAfterReturn: { 'env.control.AddNode': Array(${settings.redis_nodes}).fill(JSON.parse(node)) } }

      
  # Once the nodes are added, it will install the Redis_ckuster package that configures the 6 Redis nodes into a cluster
  - install: ${baseUrl}/scripts/cluster.jps
    envName: ${settings.envName}
    pass: ${fn.password}
    nodeGroup: redis_nodes

  - setGlobals:
      success_text: ${response.successText}
  - message: ${globals.success_text}
    script: |
      return {'result': 'success', 'message': message.replace(/<br \/>/g, '  \n')}
