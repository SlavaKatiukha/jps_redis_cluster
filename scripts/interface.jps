_info : 'https://docs.cloudscripting.com/1.9.4/'
version: 1.9.4
type: update
name: 'Redis Cluster'
id: 'Redis_cluster'
homepage: https://github.com/layershift/jps_redis_cluster
baseUrl: https://raw.githubusercontent.com/layershift/jps_redis_cluster/main/redis_cluster.jps
logo: /images/redis.jpg
globals:
  pass: ${fn.password}
targetNodes: 
  nodeGroup: 'master_redis'

buttons:
    - caption: Status
      action: ShowLinkAndPassword
      title: Title
    
onInstall:
    install_nginx_interface
actions:
    install_nginx_interface:
        nodeId: ${nodes.master_redis[0].id}
        cmd : 
            - yum install epel-release -y
            - yum install nginx  -y
            - systemctl enable --now nginx
            - curl -sL https://rpm.nodesource.com/setup_16.x | sudo bash -
            - yum clean all
            - rm -rf /var/cache/yum/*
            - yum install nodejs
            - cd /opt
            - npm install p3x-redis-ui -g
            #Configure p3x-redis-ui  as described https://github.com/patrikx3/redis-ui/blob/HEAD/artifacts/readme/start-up-server.md
            - adduser  p3x-redis-ui
            - if [ -f /etc/systemd/system/p3x-redis-ui.service ]; then rm -rf /etc/systemd/system/p3x-redis-ui.service; fi
            - echo "[Unit]" >> /etc/systemd/system/p3x-redis-ui.service
            - echo "Description=p3x-redis" >> /etc/systemd/system/p3x-redis-ui.service
            - echo "After=network.target" >> /etc/systemd/system/p3x-redis-ui.service
            - echo "[Service]" >> /etc/systemd/system/p3x-redis-ui.service
            - echo "Type=simple" >> /etc/systemd/system/p3x-redis-ui.service
            - echo "User=p3x-redis-ui" >> /etc/systemd/system/p3x-redis-ui.service
            - echo "WorkingDirectory=/home/p3x-redis-ui" >> /etc/systemd/system/p3x-redis-ui.service
            - echo "# or if you want readonly connections as it is public" >> /etc/systemd/system/p3x-redis-ui.service
            - echo "#ExecStart=/usr/bin/p3x-redis --readonly-connections" >> /etc/systemd/system/p3x-redis-ui.service
            - echo "#ExecStart=/usr/bin/p3x-redis --readonly-connections --config /home/p3x-redis-ui/p3xrs.json" >> /etc/systemd/system/p3x-redis-ui.service
            - echo "ExecStart=/usr/bin/p3x-redis" >> /etc/systemd/system/p3x-redis-ui.service
            - echo "Restart=on-abort" >> /etc/systemd/system/p3x-redis-ui.service
            - echo "[Install]" >> /etc/systemd/system/p3x-redis-ui.service
            - echo "WantedBy=multi-user.target" >> /etc/systemd/system/p3x-redis-ui.service
            - systemctl daemon-reload
            - systemctl enable p3x-redis-ui
            - service p3x-redis-ui start
            #configure nginx to redirect to p3x-redis-ui localhost 7843 as described https://github.com/patrikx3/redis-ui/blob/HEAD/artifacts/readme/start-up-server.md
            - if [ -f /etc/nginx/default.d/p3x-redis-ui.conf ]; then rm -rf /etc/nginx/default.d/p3x-redis-ui.conf; fi
            - echo "location / {" >> /etc/nginx/default.d/p3x-redis-ui.conf
            - /bin/echo "proxy_pass \"http://127.0.0.1:7843\";" >> /etc/nginx/default.d/p3x-redis-ui.conf
            - /bin/echo "proxy_set_header X-Forwarded-For \$remote_addr;" >> /etc/nginx/default.d/p3x-redis-ui.conf
            - /bin/echo "proxy_set_header Host \$host;" >> /etc/nginx/default.d/p3x-redis-ui.conf
            - /bin/echo "proxy_set_header Upgrade \$http_upgrade;" >> /etc/nginx/default.d/p3x-redis-ui.conf
            - /bin/echo "proxy_set_header Connection "upgrade";" >> /etc/nginx/default.d/p3x-redis-ui.conf
            - /bin/echo "}" >> /etc/nginx/default.d/p3x-redis-ui.conf
            - systemctl restart nginx
            #password protect nginx  described https://ubiq.co/tech-blog/how-to-password-protect-directory-in-nginx/
            - yum install httpd-tools -y
            - if [ -f /etc/nginx/conf.d/.htpasswd ]; then rm -rf /etc/nginx/conf.d/.htpasswd; fi 
            - /bin/htpasswd -b -c /etc/nginx/conf.d/.htpasswd developer ${globals.pass}
            - if [ -f /etc/nginx/default.d/nginx_passwd.conf ]; then rm -rf /etc/nginx/default.d/nginx_passwd.conf; fi 
            - /bin/echo "auth_basic \"Restricted Access!\";" >> /etc/nginx/default.d/nginx_passwd.conf
            - /bin/echo "auth_basic_user_file /etc/nginx/conf.d/.htpasswd;" >> /etc/nginx/default.d/nginx_passwd.conf
            - systemctl restart nginx
            #- /bin/echo "${globals.pass}" >> /tmp/pass
            #- message: "Connect to the following node on port 80 :\n ${nodes.master_redis[0].id}  user developer with password ${globals.pass}"
            #  script: |
            #   return {'result': 'success', 'message': message.replace(/\n/g, '  \n')}          
        user: root
    ShowLinkAndPassword:
            - message: "Connect to the following node on port 80 :\n ${nodes.master_redis[0].id}  user developer with password ${globals.pass}"
              script: |
               return {'result': 'success', 'message': message.replace(/\n/g, '  \n')}